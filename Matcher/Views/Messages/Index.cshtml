@page
@using Matcher.DataAccess;


@{
     VoVoContext _context = new VoVoContext();
 }

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/css/swipe.css" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;1,500&display=swap"
          rel="stylesheet" />
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <title>Swipe</title>
    <style>
        #chat3 .form-control {
            border-color: transparent;
        }

            #chat3 .form-control:focus {
                border-color: transparent;
                box-shadow: inset 0px 0px 0px 1px transparent;
            }

        .badge-dot {
            border-radius: 50%;
            height: 10px;
            width: 10px;
            margin-left: 2.9rem;
            margin-top: -.75rem;
        }

        #messagesList li {
            color: #fff;
            border-radius: 0.25rem;
        }

        .current-user-message {
            display: flex;
            align-items: center;
            justify-content: center;
            align-self: end;
            font-weight: 400;
            line-height: 1.5;
            color: #212529;
            text-align: center;
            text-decoration: none;
            vertical-align: middle;
            cursor: pointer;
            
            user-select: none;
            background-color: #dc3545;
            border: 1px solid #dc3545;
            padding: 0.375rem 0.75rem;
            font-size: 1rem;
            border-radius: 0.25rem;
            
            width: fit-content;
            margin-bottom: 16px;
            margin-top: 16px;
        }

            

        /* Tên lớp CSS mới của bạn, ví dụ: my-custom-danger-btn */
        .message-item {
            color: #fff;
            background-color: #6c757d;
            border-color: #6c757d;
            
            font-weight: 400;
            text-align: center;
            vertical-align: middle;
            user-select: none;
            
            padding: 0.375rem 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
            border-radius: 0.25rem;
            display: flex;
            align-items: center;
            justify-content: center;
            align-self: start;
            width: fit-content;
            margin-bottom: 16px;
            margin-top: 16px;
        }

        .chatscroll:hover {
            overflow-y: scroll;
        }
    </style>
</head>
<body>
    @{
        
        UserPhotosDAO userPhotosDAO = new UserPhotosDAO(_context);
    }
    <div class="d-flex m-2">
        <div class="side col-md-3" style="border: none;border-radius: 10px 10px 10px 10px;box-shadow: 0px 0px 5px 0px;">
            <div class="header">
                
                <div class="avatar">
                    <img src="@userPhotosDAO.GetAvatarByUsrID(ViewBag.User.UserId)" alt="" />
                </div>
                <div class="title">@ViewBag.User.Name</div>
                <div class="" style="position: absolute;left: 323px;">
                    <a href="/Users/Swipe"><img src="~/images/home.png" /></a>
                </div>
            </div>
            <nav class="menu">
                <div class="nav nav-tabs mb-3" id="nav-tab" role="tablist">
                    <button class="nav-link" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Match</button>
                    <button class="nav-link active" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Message</button>
                </div>
            </nav>
            <div class="d-flex">
                <div class="tab-content p-3 border bg-light w-100" id="nav-tabContent">
                    <div class="tab-pane fade" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
                        <div class="row">
                        </div>
                    </div>
                    <div class="tab-pane fade active show" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
                        <div class="p-3">
                            <div>
                                <div class="input-group rounded mb-3">
                                    <form method="get" action="Index" class="d-flex" style="margin-left: 5px">
                                        <input type="search" class="form-control rounded" name="searchid" placeholder="Search" aria-label="Search"
                                               aria-describedby="search-addon" />
                                        <span class="input-group-text border-0" id="search-addon">
                                            <i class="fas fa-search"></i>
                                        </span>
                                    </form>
                                    
                                </div>
                                @{
                                    User user = ViewBag.user;
                                }
                                <div data-mdb-perfect-scrollbar="true" style="position: relative; height: 400px">
                                    <ul class="list-unstyled mb-0" style="max-height: 68vh; overflow-y: scroll;">
                                        @foreach (int? mess1 in ViewBag.messid)
                                        {
                                            UserPhoto user1 = _context.UserPhotos.FirstOrDefault(x => x.UserId == mess1);
                                            User curUser = _context.Users.FirstOrDefault(x => x.UserId == mess1);
                                            Message mess2 = _context.Messages
                                            .Where(x => x.FromUserId == user.UserId && x.ToUserId == mess1)
                                            .OrderByDescending(x => x.DateSent)
                                            .FirstOrDefault();
                                            <li class="p-2 border-bottom">
                                                <a href="/Messages/Index/@mess1" class="d-flex justify-content-between nav-link">
                                                    <div class="tab-pane fade active show" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab" style="max-height: 75vh;overflow-y: hidden;overflow-x: hidden;">
                                                    <div class="messages">
                                                        <div class="avatar">
                                                            <img src="@user1.PhotoLink" alt="" />
                                                        </div>
                                                        <div class="message">
                                                            <div class="user">@curUser.Name</div>
                                                            <div class="text">@mess2.MessageText</div>
                                                        </div>
                                                    </div>
                                                    </div>
                                                    
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>



                        </div>
                    </div>
                </div>
                
            </div>
            
        </div>

        <div class="content col-md-6 " style="border-radius: 10px 10px 10px 10px;box-shadow: 0px 0px 5px 0px;padding-top: 60px">
            <div style="max-height: 513px; overflow: scroll; overflow-x: hidden; overflow-y:hidden" class="col-md-6 col-lg-7 col-xl-8" class="chatscroll" id="chatscroll">
                @foreach (Message mess in ViewBag.messages)
                {
                    if (user.UserId == mess.FromUserId)
                    {
                        <div class="form-control" style="border: none">
                            <ul class="btn btn-secondary" style="">@mess.MessageText</ul>
                        </div>
                    }
                    else
                    {
                        <div class="d-flex justify-content-lg-end form-control" style="border: none">
                            <ul class="btn btn-danger d-flex justify-content-lg-end" style="">@mess.MessageText</ul>
                        </div>
                    }

                }
                <div class="btn form-control">
                    <ul style="display: flex;flex-direction: column;justify-content: end; padding: 0px;" class="btn" id="messagesList"></ul>
                </div>


            </div>

            <div class="d-flex justify-content-center w-100">
                <div class="text-muted d-flex justify-content-start align-items-center pe-3 pt-3 mt-2 w-50"
                     style="    position: absolute;bottom: 10px;right: 23.5vw;">
                    @{
                        UserPhoto user23 = _context.UserPhotos.FirstOrDefault(x => x.UserId == user.UserId);
                    }
                    <img src="@user23.PhotoLink" class="rounded-circle"
                         alt="avatar 3" style="width: 60px; height: 100%;">


                    <input type="hidden" id="userInput" value="@user.Name" />
                    <textarea class="w-100" class="form-control" style="height: 40px;" id="messageInput"></textarea>
                    @{
                        if (ViewBag.messid == null)
                        {
                            <button style="display: none" id="sendButton" class="btn" onclick="sendMessage()">
                                <a href="#" id="sendLink"></a>
                                <img alt="" src="~/images/send-message.png" />
                            </button>
                        }else{
                            <button id="sendButton" class="btn" onclick="sendMessage()">
                                <a href="#" id="sendLink"></a>
                                <img alt="" src="~/images/send-message.png" />
                            </button>
                        }
                    }


                </div>
            </div>
        </div>

        <div class="content col-md-3 p-0" style="border-radius: 10px 10px 10px 10px;box-shadow: 0px 0px 5px 0px;">
            @{

                int? id = ViewBag.id as int?;
                UserPhoto u = _context.UserPhotos.FirstOrDefault(x => x.UserId == id);
                User cur = _context.Users.FirstOrDefault(x => x.UserId == id);
                if (u != null){
                    <img style="width: 100%; height:70%; object-fit: cover" src="@u.PhotoLink" alt="" />
                    <div class="d-flex flex-row">

                        <div class="pt-1">
                            <p style="font-size: 40px;border-bottom: solid;" class="fw-bold mb-2">@cur.Name</p>
                            <p class="fw-bold mb-1"><img src="~/images/location.png" />@cur.Location</p>
                            <p class="fw-bold mb-1"><img src="~/images/resume.png" />@cur.Description</p>
                            <p class="fw-bold mb-1"><img src="~/images/birthday-cake.png" />@cur.DateOfBirth.ToString().Substring(0,10)</p>
                        </div>
                    </div>
                }
                

            }
        </div>

    </div>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script src="/js/signalr/dist/browser/signalr.js"></script>
    <script src="/js/chat.js"></script>
    <script>
        function sendMessage() {
            // Lấy giá trị từ trường textarea
            var message = document.getElementById('messageInput').value;

            // Tạo đường link với tham số truyền vào
            var link = "/Messages/saveMess?userid=@user.UserId&toUserId=@ViewBag.id&messagetext=" + encodeURIComponent(message);

            $.ajax({
                url: link,
                type: 'GET', // hoặc 'POST' tùy thuộc vào phương thức của controller
                success: function (data) {
                    $('#messageInput').val('');
                },
                error: function (error) {

                }
            });
        }
    </script>
    <script>
        // Hàm để cuộn thanh cuộn về cuối
        function scrollToBottom() {
            var messagesList = document.getElementById('chatscroll');
            messagesList.scrollTop = messagesList.scrollHeight;
        }

        // Gọi hàm scrollToBottom khi trang đã tải xong
        window.onload = function () {
            scrollToBottom();
        };
    </script>
</body>
</html>
